module.exports.config = {
    name: 'autott',
    version: '10.02',
    hasPermssion: 0,
    credits: 'DC-Nam', // Bok idea th·ªùi ti·∫øt
    description: 'T·ª± ƒë·ªông g·ª≠i tin nh·∫Øn theo gi·ªù ƒë√£ c√†i!',
    commandCategory: 'H·ªá Th·ªëng',
    usages: '[]',
    cooldowns: 3
};
const nam = [{
    timer: '7:00:00 AM',
    message: ['\n{abc}']
},

{
    timer: '7:30:00 AM',
    message: ['ùë™ùíÇÃÇùíñ ùíèùíêÃÅùíä ùíåùíäùíèùíâ ƒëùíäùíÜÃÇÃâùíè: {caunoi}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚ûù ƒêùóÆÃÇùòÜ ùóπùóÆÃÄ ùòÅùó∂ùóª ùóªùóµùóÆÃÜÃÅùóª ùòÅùòÇÃõÃ£ ƒëùóºÃÇÃ£ùóªùó¥']
},

{
    timer: '8:00:00 AM',
    message: ['\n{abc}']
},

{
    timer: '8:30:00 AM',
    message: ['ùóñùêöÃÇùòÇ ùóªùóºÃÅùó∂ ùó∏ùó∂ùóªùóµ ƒëùó∂ùó≤ÃÇÃâùóª: {caunoi}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚ûù ƒêùóÆÃÇùòÜ ùóπùóÆÃÄ ùòÅùó∂ùóª ùóªùóµùóÆÃÜÃÅùóª ùòÅùòÇÃõÃ£ ƒëùóºÃÇÃ£ùóªùó¥']
},

{
    timer: '9:00:00 AM',
    message: ['\n{abc}']
},

{
    timer: '9:30:00 AM',
    message: ['ùóñùêöÃÇùòÇ ùóªùóºÃÅùó∂ ùó∏ùó∂ùóªùóµ ƒëùó∂ùó≤ÃÇÃâùóª: {caunoi}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚ûù ƒêùóÆÃÇùòÜ ùóπùóÆÃÄ ùòÅùó∂ùóª ùóªùóµùóÆÃÜÃÅùóª ùòÅùòÇÃõÃ£ ƒëùóºÃÇÃ£ùóªùó¥']
},

    {
    timer: '10:00:00 AM',
    message: ['\n{abc}']
},
             {
                 timer: '10:20:00 AM',
                 message: ['It is 10 AM, How are you today?']
             },
             
             {
    timer: '10:30:00 AM',
    message: ['ùóñùêöÃÇùòÇ ùóªùóºÃÅùó∂ ùó∏ùó∂ùóªùóµ ƒëùó∂ùó≤ÃÇÃâùóª: {caunoi}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚ûù ƒêùóÆÃÇùòÜ ùóπùóÆÃÄ ùòÅùó∂ùóª ùóªùóµùóÆÃÜÃÅùóª ùòÅùòÇÃõÃ£ ƒëùóºÃÇÃ£ùóªùó¥']
},
             {
                  timer: '11:01:00 AM',
                  message: ['It is 11 AM, How are you today?']
              },

             {
    timer: '11:00:00 AM',
    message: ['\n{abc}']
},
             {
                  timer: '11:31:00 AM',
                  message: ['It is 11:30 AM, How are you today?']
              },
             
             {
    timer: '11:30:00 AM',
    message: ['ùòæùêöÃÇùô™ ùô£ùíêÃÅùôû ùô†ùôûùô£ùôù ƒëùôûùíÜÃÇÃâùô£: {caunoi}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚ûù ƒêùóÆÃÇùòÜ ùóπùóÆÃÄ ùòÅùó∂ùóª ùóªùóµùóÆÃÜÃÅùóª ùòÅùòÇÃõÃ£ ƒëùóºÃÇÃ£ùóªùó¥']
},

             {
    timer: '12:00:00 PM',
    message: ['\n{abc}']
},

{
    timer: '12:30:00 PM',
    message: ['ùòæùêöÃÇùô™ ùô£ùíêÃÅùôû ùô†ùôûùô£ùôù ƒëùôûùíÜÃÇÃâùô£: {caunoi}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚ûù ƒêùóÆÃÇùòÜ ùóπùóÆÃÄ ùòÅùó∂ùóª ùóªùóµùóÆÃÜÃÅùóª ùòÅùòÇÃõÃ£ ƒëùóºÃÇÃ£ùóªùó¥']
},

{
    timer: '1:30:00 PM',
    message: ['ùë™ùíÇÃÇùíñ ùíèùíêÃÅùíä ùíåùíäùíèùíâ ƒëùíäùíÜÃÇÃâùíè: {caunoi}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚ûù ƒêùóÆÃÇùòÜ ùóπùóÆÃÄ ùòÅùó∂ùóª ùóªùóµùóÆÃÜÃÅùóª ùòÅùòÇÃõÃ£ ƒëùóºÃÇÃ£ùóªùó¥']
},

{
    timer: '2:00:00 PM',
    message: ['\n{abc}']
},

{
    timer: '2:30:00 PM',
    message: ['ùë™ùíÇÃÇùíñ ùíèùíêÃÅùíä ùíåùíäùíèùíâ ƒëùíäùíÜÃÇÃâùíè: {caunoi}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚ûù ƒêùóÆÃÇùòÜ ùóπùóÆÃÄ ùòÅùó∂ùóª ùóªùóµùóÆÃÜÃÅùóª ùòÅùòÇÃõÃ£ ƒëùóºÃÇÃ£ùóªùó¥']
},

             {
                 timer: '3:30:00 PM',
                 message: ['ùë™ùíÇÃÇùíñ ùíèùíêÃÅùíä ùíåùíäùíèùíâ ƒëùíäùíÜÃÇÃâùíè: {caunoi}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚ûù ƒêùóÆÃÇùòÜ ùóπùóÆÃÄ ùòÅùó∂ùóª ùóªùóµùóÆÃÜÃÅùóª ùòÅùòÇÃõÃ£ ƒëùóºÃÇÃ£ùóªùó¥']
             },

             {
                 timer: '4:00:00 PM',
                 message: ['\n{abc}']
             },

             {
                 timer: '4:30:00 PM',
                 message: ['ùêÇùêöÃÇùêÆ ùêßùê®ÃÅùê¢ ùê§ùê¢ùêßùê° ƒëùê¢ùêûÃÇÃâùêß: {caunoi}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚ûù ƒêùóÆÃÇùòÜ ùóπùóÆÃÄ ùòÅùó∂ùóª ùóªùóµùóÆÃÜÃÅùóª ùòÅùòÇÃõÃ£ ƒëùóºÃÇÃ£ùóªùó¥']
             },

             {
                 timer: '5:00:00 PM',
                 message: ['\n{abc}']
             },

             {
                  timer: '5:30:00 PM',
                  message: ['ùêÇùêöÃÇùêÆ ùêßùê®ÃÅùê¢ ùê§ùê¢ùêßùê° ƒëùê¢ùêûÃÇÃâùêß: {caunoi}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚ûù ƒêùóÆÃÇùòÜ ùóπùóÆÃÄ ùòÅùó∂ùóª ùóªùóµùóÆÃÜÃÅùóª ùòÅùòÇÃõÃ£ ƒëùóºÃÇÃ£ùóªùó¥']
              },

             {
                  timer: '6:30:00 PM',
                  message: ['ùêÇùêöÃÇùêÆ ùêßùê®ÃÅùê¢ ùê§ùê¢ùêßùê° ƒëùê¢ùêûÃÇÃâùêß: {caunoi}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚ûù ƒêùóÆÃÇùòÜ ùóπùóÆÃÄ ùòÅùó∂ùóª ùóªùóµùóÆÃÜÃÅùóª ùòÅùòÇÃõÃ£ ƒëùóºÃÇÃ£ùóªùó¥']
              },

             {
                  timer: '7:00:00 PM',
                  message: ['\n{abc}']
              },

             {
                 timer: '7:30:00 PM',
                 message: ['ùòäùêöÃÇùò∂ ùòØùëúÃÅùò™ ùò¨ùò™ùòØùò© ƒëùò™ùëíÃÇÃâùòØ: {caunoi}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚ûù ƒêùóÆÃÇùòÜ ùóπùóÆÃÄ ùòÅùó∂ùóª ùóªùóµùóÆÃÜÃÅùóª ùòÅùòÇÃõÃ£ ƒëùóºÃÇÃ£ùóªùó¥']
             },

             {
                 timer: '8:00:00 PM',
                 message: ['\n{abc}']
             },

             {
                 timer: '8:30:00 PM',
                 message: ['ùòäùêöÃÇùò∂ ùòØùëúÃÅùò™ ùò¨ùò™ùòØùò© ƒëùò™ùëíÃÇÃâùòØ: {caunoi}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚ûù ƒêùóÆÃÇùòÜ ùóπùóÆÃÄ ùòÅùó∂ùóª ùóªùóµùóÆÃÜÃÅùóª ùòÅùòÇÃõÃ£ ƒëùóºÃÇÃ£ùóªùó¥']
             },

             {
                 timer: '9:00:00 PM',
                 message: ['\n{abc}']
             },

             {
                 timer: '9:30:00 PM',
                 message: ['ùêÇùêöÃÇùêÆ ùêßùê®ÃÅùê¢ ùê§ùê¢ùêßùê° ƒëùê¢ùêûÃÇÃâùêß: {caunoi}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚ûù ƒêùóÆÃÇùòÜ ùóπùóÆÃÄ ùòÅùó∂ùóª ùóªùóµùóÆÃÜÃÅùóª ùòÅùòÇÃõÃ£ ƒëùóºÃÇÃ£ùóªùó¥']
             },

             {
                 timer: '10:00:00 PM',
                 message: ['\n{abc}']
             },

             {
                  timer: '10:30:00 PM',
                  message: ['ùóñùêöÃÇùòÇ ùóªùóºÃÅùó∂ ùó∏ùó∂ùóªùóµ ƒëùó∂ùó≤ÃÇÃâùóª: {caunoi}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚ûù ƒêùóÆÃÇùòÜ ùóπùóÆÃÄ ùòÅùó∂ùóª ùóªùóµùóÆÃÜÃÅùóª ùòÅùòÇÃõÃ£ ƒëùóºÃÇÃ£ùóªùó¥']
              },

             {
                  timer: '11:00:00 PM',
                  message: ['\n{abc}']
              },

             {
                  timer: '11:30:00 PM',
                  message: ['ùêÇùêöÃÇùêÆ ùêßùê®ÃÅùê¢ ùê§ùê¢ùêßùê° ƒëùê¢ùêûÃÇÃâùêß: {caunoi}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚ûù ƒêùóÆÃÇùòÜ ùóπùóÆÃÄ ùòÅùó∂ùóª ùóªùóµùóÆÃÜÃÅùóª ùòÅùòÇÃõÃ£ ƒëùóºÃÇÃ£ùóªùó¥']
              },

             {
                  timer: '12:30:00 AM',
                  message: ['ùêÇùêöÃÇùêÆ ùêßùê®ÃÅùê¢ ùê§ùê¢ùêßùê° ƒëùê¢ùêûÃÇÃâùêß: {caunoi}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚ûù ƒêùóÆÃÇùòÜ ùóπùóÆÃÄ ùòÅùó∂ùóª ùóªùóµùóÆÃÜÃÅùóª ùòÅùòÇÃõÃ£ ƒëùóºÃÇÃ£ùóªùó¥']
              },

             {
                  timer: '2:00:00 AM',
                  message: ['\n{abc}']
              },

             {
                  timer: '5:00:00 AM',
                  message: ['\n{abc}']
              },

             {
    }];
module.exports.onLoad = o => setInterval(async () => {
    const r = a => a[Math.floor(Math.random() * a.length)];
    if (√° = nam.find(i => i.timer == new Date(Date.now() + 25200000).toLocaleString().split(/,/).pop().trim())) {
        const axios = require('axios');
        const time = process.uptime();
        var hours = Math.floor(time / (60 * 60));
        var minutes = Math.floor((time % (60 * 60)) / 60);
        var seconds = Math.floor(time % 60);
        var msg = r(√°.message);
        const res = await axios.get(`https://api.popcat.xyz/weather?q=${encodeURI('H√† N·ªôi')}`);
        var abc = `===„Äåùóßùóï ùóßùóµùóºÃõÃÄùó∂ ùóßùó∂ùó≤ÃÇÃÅùòÅ„Äç===\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚Üí„Äéüìå„Äèùó∞ùóÆÃÇÃ£ùóΩ ùóªùóµùóÆÃÇÃ£ùòÅ ùòÅùóµùóºÃõÃÄùó∂ ùòÅùó∂ùó≤ÃÇÃÅùòÅ ùòÅùóÆÃ£ùó∂: ${res.data[0].location.name}\n‚Üí„Äé‚è∞„Äèùó©ùóÆÃÄùóº ùóπùòÇÃÅùó∞: ${res.data[0].current.day} ${res.data[0].current.date}\n‚Üí„Äéüå°Ô∏è„Äèùó°ùóµùó∂ùó≤ÃÇÃ£ùòÅ ƒëùóºÃÇÃ£: ${res.data[0].current.temperature}¬∞${res.data[0].location.degreetype}\n‚Üí„Äéüìã„Äèùó†ùóºÃÇ ùòÅùóÆÃâ: ${res.data[0].current.skytext}\n‚Üí„Äé‚òÅÔ∏è„ÄèƒëùóºÃÇÃ£ ùóÆÃÇÃâùó∫: ${res.data[0].current.humidity}\n‚Üí„Äéüí®„ÄèùóõùòÇÃõùóºÃõÃÅùóªùó¥ ùó¥ùó∂ùóºÃÅ: ${res.data[0].current.winddisplay}\n‚Üí„Äéüì•„Äèùóöùóµùó∂ ùóªùóµùóÆÃÇÃ£ùóª ùòÉùóÆÃÄùóº ùóπùòÇÃÅùó∞: ${res.data[0].current.observationtime}\n‚Üí ùóßùòÇÃõÃÄ ùòÅùóøùóÆÃ£ùó∫ ùòÉùòÇÃÉ ùòÅùóøùòÇÃ£ nasa üöÄ`;
        msg = msg.replace(/{abc}/, abc);
        msg = msg.replace(/{hours}/g, hours)
        msg = msg.replace(/{minutes}/g, minutes)
        msg = msg.replace(/{seconds}/g, seconds)
        msg = msg.replace(/{time}/g, require("moment-timezone").tz("Asia/Ho_Chi_Minh").format("HH:mm:ss (D/MM/YYYY) (dddd)")).replace(/{caunoi}/g, (await axios.get(`https://trinkers.glitch.me/caunoi`)).data.data)
        msg = { body: msg };
        global.data.allThreadID.forEach(i => o.api.sendMessage(msg, i));
    }
}, 1000);

module.exports.run = async o => {
  try{
  const axios = global.nodemodule["axios"];
  const fs = global.nodemodule["fs-extra"];
  const request = global.nodemodule["request"];
  const { api, event, args } = o;
  const { threadID, messageID } = event;
  var bok = args.join(" ");
  if(!bok) return api.sendMessage("nh·∫≠p t·ªânh/tp c·∫ßn xem th·ªùi ti·∫øt", threadID);
  const res = await axios.get(`https://api.popcat.xyz/weather?q=${encodeURI(bok)}`);
  const bokk = res.data[0].forecast;
  var text = `Th·ªùi ti·∫øt c·ªßa: ${bok} v√†o c√°c ng√†y`;
  for (let i = 0; i < 5; i++) {
    text += `\n${i+1}-> ${bokk[i].day} ${bokk[i].date}\n=>Nhi·ªát ƒë·ªô d·ª± b√°o: t·ª´ ${bokk[i].low} ƒë·∫øn ${bokk[i].high}\n=>M√¥ t·∫£: ${bokk[i].skytextday}\n=>T·ª∑ l·ªá m∆∞a: ${bokk[i].precip}\n`
  };
  api.sendMessage(text, threadID, messageID)
  }catch(err){api.sendMessage(`${err}`, threadID)}
}
